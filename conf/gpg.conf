# First, remove data where it isn't necessary.
# We don't want 100 users of Tavern giving off differnet keys, it'd make it easier to ID them.
no-emit-version
no-comments

# Don't include the key id in the message.
# We have relatively small keychains anyway, and this makes it harder to see who it's for.
throw-keyids
try-all-secrets


# Use the long names for keys 
# with-colons, which is included in by gnupg.py enables this anyway
# But we do want it, so manually ensure it's ther.e
keyid-format long

# Manually set the algoritms that we'll send to other people with
# We don't want to let people request things in bad/unsecure formats.
# So for now, just manually specify what we'll send out.
digest-algo SHA512
cert-digest-algo SHA512
cipher-algo AES

# Specify what we'd like back.
# Again, right now this is intentionally sparse, to avoid leaking client intel.
personal-digest-preferences SHA512
personal-cipher-preferences AES
personal-compress-preferences ZLIB
default-preference-list SHA512 AES ZLIB

# But, despite saying ALWAYS use X,Y,Z, gpg tries to default to the OpenPGP spec.
# Which says to allow 3DES/SHA1/Uncompressed files
# But we don't want those, despite what the spec may say.

disable-cipher-algo 3DES
disable-pubkey-algo SHA1
# - We can't currently disable uncompressed in GPG itself.
# - But we can reject them in Tav.

# We should use Zlib compression. For small files it's faster than bzip2.
compress-algo ZLIB

# Ensure we're not using the central ~/.gnupg keyring!
no-default-keyring

# Avoid looking to the outside world/keyservers. We use a different trust model.
no-auto-key-locate
verify-options "no-show-photos no-show-policy-urls no-show-keyserver-urls no-show-uid-validity no-show-unusable-uids no-pka-lookups"
keyserver hkp://127.0.0.1:0
keyserver-options "no-try-dns-srv no-honor-keyserver-url no-honor-pka-record no-auto-key-retrieve http-proxy=socks5-hostname://127.0.0.1:0"

export-options "no-include-attributes export-minimal"